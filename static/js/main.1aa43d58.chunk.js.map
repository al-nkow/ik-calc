{"version":3,"sources":["logo.svg","components/Input.jsx","components/Fabric.jsx","components/Shared.js","components/Rome.jsx","components/Portiere.jsx","components/Tulle.jsx","components/Cornice.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TextField","styled","input","Input","changed","type","onChange","event","val","target","value","replace","indexOf","arr","split","length","first","rest","join","Wrap","div","Example","Fabric","onClick","title","subtitle","active","className","Title","Step","StepTitle","FormGroup","Label","label","RadioLabel","Price","span","PriceLabel","Rome","useState","base","width","height","cornice","values","setValues","setBase","price","materialPrice","toFixed","sewingPrice","tapePrice","cornicePrice","totalPrice","checked","corniceBase","setCorniceBase","waves","Tulle","Cornice","style","paddingLeft","Container","Row","Col","App","activeTab","setActiveTab","Portiere","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1aa43d58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst TextField = styled.input`\n  border: 2px solid #333333;\n  padding: 8px 15px;\n  border-radius: 2px;\n  text-shadow: none;\n  box-shadow: none;\n  width: 260px;\n`;\n\nconst Input = ({ changed }) => {\n  const setValue = event => {\n    const { value } = event.target;\n    let val = value.replace(/[,]/g, '.').replace(/[^0-9.]/g, '');\n\n    if (val.indexOf('.') !== -1) {\n      const arr = val.split('.');\n      if (arr.length > 2 ) {\n        const [first, ...rest] = arr;\n        val = `${first}.${rest.join('')}`;\n      }\n    }\n    \n    if (val > 100000) val = 100000;\n    if (val[0] === '.') val = '0' + val;\n\n    event.target.value = val;\n    changed(+val);\n  }\n\n  return <TextField type=\"text\" onChange={setValue} />;\n}\n\nexport default Input;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrap = styled.div`\n  border-radius: 2px;\n  display: inline-block;\n  border: 1px solid #333333;\n  width: 200px;\n  margin-right: 10px;\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    border-color: red;\n  }\n  &.active {\n    border-color: red;\n    color: red;\n  }\n`;\n\nconst Example = styled.div`\n  height: 100px;\n  margin-bottom: 10px;\n  background: #dedede;\n`;\n\nconst Fabric = ({ onClick, title, subtitle, active }) => {\n  return (\n    <Wrap onClick={onClick} className={active ? 'active' : ''}>\n      <Example />\n      <div>{title}</div>\n      <small>{subtitle}</small>\n    </Wrap>\n  );\n};\n\nFabric.propTypes = {\n  active: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Fabric;\n","import styled from 'styled-components';\n\nexport const Title = styled.div`\n  margin-bottom: 20px;\n  font-size: 22px;\n`;\n\nexport const Step = styled.div`\n  border: 1px solid #dedede;\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const StepTitle = styled.div`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 16px;\n  margin-bottom: 4px;\n`;\n\nexport const RadioLabel = styled.div`\n  display: inline-block;\n  margin-right: 10px;\n`;\n\nexport const Price = styled.span`\n  color: #25289a;\n`;\n\nexport const PriceLabel = styled.span`\n  margin-right: 10px;\n`;\n","import React, { useState } from 'react';\nimport Input from './Input';\nimport Fabric from './Fabric';\nimport {\n  Title,\n  Step,\n  StepTitle,\n  FormGroup,\n  Label,\n  Price,\n  PriceLabel,\n} from './Shared';\n\nconst Rome = () => {\n  const [values, setValues] = useState({\n    base: null,\n    width: null,\n    height: null,\n    cornice: false,\n  });\n\n  const setBase = (price) => {\n    setValues({ ...values, base: price });\n  };\n\n  const setWidth = (width) => {\n    setValues({ ...values, width });\n  };\n\n  const setHeight = (height) => {\n    setValues({ ...values, height });\n  };\n\n  const setCornice = (event) => {\n    setValues({ ...values, cornice: +event.target.checked });\n  };\n\n  const { base, width, height, cornice } = values;\n  const materialPrice = +(base * width).toFixed(2);\n  const sewingPrice = +(base * width * height).toFixed(2);\n  const tapePrice = +(width * (height / 0.3) * 150).toFixed(2);\n  const cornicePrice = cornice ? +(width * 2200).toFixed(2) : 0;\n\n  const totalPrice = +(\n    materialPrice +\n    sewingPrice +\n    tapePrice +\n    cornicePrice\n  ).toFixed(2);\n\n  return (\n    <div>\n      <Title>Расчёт стоимости римской шторы</Title>\n\n      <Step>\n        <StepTitle>1. Выберите материал</StepTitle>\n        <Fabric\n          onClick={() => setBase(1300)}\n          active={values.base === 1300}\n          title=\"Тюль\"\n          subtitle=\"стоимость 1300 р/погонный метр\"\n        />\n        <Fabric\n          onClick={() => setBase(1900)}\n          active={values.base === 1900}\n          title=\"Блэкаут\"\n          subtitle=\"стоимость 1900 р/погонный метр\"\n        />\n        <Fabric\n          onClick={() => setBase(1700)}\n          active={values.base === 1700}\n          title=\"Ткань\"\n          subtitle=\"стоимость 1700 р/погонный метр\"\n        />\n      </Step>\n\n      <Step>\n        <StepTitle>2. Укажите размеры</StepTitle>\n        <FormGroup>\n          <Label>Длина карниза (ширина шторы)</Label>\n          <Input changed={setWidth} />\n        </FormGroup>\n        <FormGroup>\n          <Label>Высота шторы</Label>\n          <Input changed={setHeight} />\n        </FormGroup>\n      </Step>\n\n      <Step>\n        <StepTitle>3. Дополнительные услуги</StepTitle>\n        <Label>\n          <input type=\"checkbox\" onChange={setCornice} />\n          Добавить карниз\n        </Label>\n      </Step>\n\n      {base && width && height ? (\n        <Step>\n          <StepTitle>Итоговая стоимость: {totalPrice} руб.</StepTitle>\n          <small>\n            Итоговая стоимость складывается из следующих составляющих\n          </small>\n          <div>\n            <PriceLabel>Стоимость ткани:</PriceLabel>\n            <Price>\n              {base} x {width} = {materialPrice} рублей\n            </Price>\n          </div>\n          <div>\n            <PriceLabel>Цена пошива:</PriceLabel>\n            <Price>\n              {base} x {width} x {height} = {sewingPrice} рублей\n            </Price>\n          </div>\n          <div>\n            <PriceLabel>Цена шторной ленты:</PriceLabel>\n            <Price>\n              {width} x ({height}/0.3) x 150 = {tapePrice} рублей\n            </Price>\n          </div>\n          {cornice ? (\n            <div>\n              <PriceLabel>Цена карниза:</PriceLabel>\n              <Price>\n                {width} x 2200 = {cornicePrice} рублей\n              </Price>\n            </div>\n          ) : null}\n        </Step>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Rome;\n","import React, { useState } from 'react';\nimport Input from './Input';\nimport Fabric from './Fabric';\nimport {\n  Title,\n  Step,\n  StepTitle,\n  FormGroup,\n  Label,\n  RadioLabel,\n  Price,\n  PriceLabel,\n} from './Shared';\n\nconst Rome = () => {\n  const [values, setValues] = useState({\n    base: null,\n    width: null,\n    height: null,\n    cornice: false,\n    corniceBase: 700,\n  });\n\n  const setBase = (price) => {\n    setValues({ ...values, base: price });\n  };\n\n  const setWidth = (width) => {\n    setValues({ ...values, width });\n  };\n\n  const setWaves = (waves) => {\n    setValues({ ...values, waves });\n  };\n\n  const setCornice = (event) => {\n    setValues({ ...values, cornice: +event.target.checked });\n  };\n\n  const setCorniceBase = (corniceBase) => {\n    setValues({ ...values, corniceBase });\n  };\n\n  const { base, width, waves, cornice, corniceBase } = values;\n  const materialPrice = +(base * width * waves).toFixed(2);\n  const sewingPrice = +(720 * width * waves).toFixed(2);\n  const tapePrice = +(width * (waves / 0.3) * 100).toFixed(2);\n  const cornicePrice = cornice\n    ? +(width * corniceBase).toFixed(2)\n    : 0;\n\n  const totalPrice = +(\n    materialPrice +\n    sewingPrice +\n    tapePrice +\n    cornicePrice\n  ).toFixed(2);\n\n  return (\n    <div>\n      <Title>Расчёт стоимости Портьеры</Title>\n\n      <Step>\n        <StepTitle>1. Выберите материал</StepTitle>\n        <Fabric\n          onClick={() => setBase(1900)}\n          active={values.base === 1900}\n          title=\"Блэкаут\"\n          subtitle=\"стоимость 1900 руб/погонный метр\"\n        />\n        <Fabric\n          onClick={() => setBase(1600)}\n          active={values.base === 1600}\n          title=\"Лёгкие\"\n          subtitle=\"стоимость 1600 р/погонный метр\"\n        />\n        <Fabric\n          onClick={() => setBase(8300)}\n          active={values.base === 8300}\n          title=\"Пидорские\"\n          subtitle=\"стоимость 8300 р/погонный метр\"\n        />\n      </Step>\n\n      <Step>\n        <StepTitle>2. Укажите размеры</StepTitle>\n        <FormGroup>\n          <Label>Длина карниза (ширина шторы)</Label>\n          <Input changed={setWidth} />\n        </FormGroup>\n        <FormGroup>\n          <Label>Желаемая складка (коэффициент сборки)</Label>\n          <Input changed={setWaves} />\n        </FormGroup>\n      </Step>\n\n      <Step>\n        <StepTitle>3. Дополнительные услуги</StepTitle>\n        <Label>\n          <input type=\"checkbox\" onChange={setCornice} />\n          Добавить карниз\n        </Label>\n        {cornice ? (\n          <>\n            <div>\n              <small>Выберите тип карниза</small>\n            </div>\n            <RadioLabel>\n              <input\n                type=\"radio\"\n                value=\"option1\"\n                checked={corniceBase === 700}\n                onChange={() => setCorniceBase(700)}\n              />\n              Профильный (700 руб/м)\n            </RadioLabel>\n            <RadioLabel>\n              <input\n                type=\"radio\"\n                value=\"option2\"\n                checked={corniceBase === 2000}\n                onChange={() => setCorniceBase(2000)}\n              />\n              Декоративный (2000 руб/м)\n            </RadioLabel>\n          </>\n        ) : null}\n      </Step>\n\n      {base && width && waves ? (\n        <Step>\n          <StepTitle>Итоговая стоимость: {totalPrice} руб.</StepTitle>\n          <small>\n            Итоговая стоимость складывается из следующих составляющих\n          </small>\n          <div>\n            <PriceLabel>Стоимость ткани:</PriceLabel>\n            <Price>\n              {base} x {width} x {waves} = {materialPrice} рублей\n            </Price>\n          </div>\n          <div>\n            <PriceLabel>Цена пошива:</PriceLabel>\n            <Price>\n              720 x {width} x {waves} = {sewingPrice} рублей\n            </Price>\n          </div>\n          <div>\n            <PriceLabel>Цена шторной ленты:</PriceLabel>\n            <Price>\n              {width} x ({waves}/0.3) x 100 = {tapePrice} рублей\n            </Price>\n          </div>\n          {cornice ? (\n            <div>\n              <PriceLabel>Цена карниза:</PriceLabel>\n              <Price>\n                {width} x {corniceBase} = {cornicePrice} рублей\n              </Price>\n            </div>\n          ) : null}\n        </Step>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Rome;\n","import React, { useState } from 'react';\nimport Input from './Input';\nimport Fabric from './Fabric';\nimport {\n  Title,\n  Step,\n  StepTitle,\n  FormGroup,\n  Label,\n  RadioLabel,\n  Price,\n  PriceLabel,\n} from './Shared';\n\nconst Tulle = () => {\n  const [values, setValues] = useState({\n    base: null,\n    width: null,\n    height: null,\n    cornice: false,\n    corniceBase: 700,\n  });\n\n  const setBase = (price) => {\n    setValues({ ...values, base: price });\n  };\n\n  const setWidth = (width) => {\n    setValues({ ...values, width });\n  };\n\n  const setWaves = (waves) => {\n    setValues({ ...values, waves });\n  };\n\n  const setCornice = (event) => {\n    setValues({ ...values, cornice: +event.target.checked });\n  };\n\n  const setCorniceBase = (corniceBase) => {\n    setValues({ ...values, corniceBase });\n  };\n\n  const { base, width, waves, cornice, corniceBase } = values;\n  const materialPrice = +(base * width * waves).toFixed(2);\n  const sewingPrice = +(720 * width * waves).toFixed(2);\n  const tapePrice = +(width * (waves / 0.3) * 100).toFixed(2);\n  const cornicePrice = cornice\n    ? +(width * corniceBase).toFixed(2)\n    : 0;\n\n  const totalPrice = +(\n    materialPrice +\n    sewingPrice +\n    tapePrice +\n    cornicePrice\n  ).toFixed(2);\n\n  return (\n    <div>\n      <Title>Расчёт стоимости Тюли</Title>\n\n      <Step>\n        <StepTitle>1. Выберите материал</StepTitle>\n        <Fabric\n          onClick={() => setBase(600)}\n          active={values.base === 600}\n          title=\"Вуаль\"\n          subtitle=\"стоимость 600 руб/погонный метр\"\n        />\n        <Fabric\n          onClick={() => setBase(1900)}\n          active={values.base === 1900}\n          title=\"Креп\"\n          subtitle=\"стоимость 1900 руб/погонный метр\"\n        />\n        <Fabric\n          onClick={() => setBase(1300)}\n          active={values.base === 1300}\n          title=\"Лён\"\n          subtitle=\"стоимость 1300 руб/погонный метр\"\n        />\n      </Step>\n\n      <Step>\n        <StepTitle>2. Укажите размеры</StepTitle>\n        <FormGroup>\n          <Label>Длина карниза (ширина шторы)</Label>\n          <Input changed={setWidth} />\n        </FormGroup>\n        <FormGroup>\n          <Label>Желаемая складка (коэффициент сборки)</Label>\n          <Input changed={setWaves} />\n        </FormGroup>\n      </Step>\n\n      <Step>\n        <StepTitle>3. Дополнительные услуги</StepTitle>\n        <Label>\n          <input type=\"checkbox\" onChange={setCornice} />\n          Добавить карниз\n        </Label>\n        {cornice ? (\n          <>\n            <div>\n              <small>Выберите тип карниза</small>\n            </div>\n            <RadioLabel>\n              <input\n                type=\"radio\"\n                value=\"option1\"\n                checked={corniceBase === 700}\n                onChange={() => setCorniceBase(700)}\n              />\n              Профильный (700 руб/м)\n            </RadioLabel>\n            <RadioLabel>\n              <input\n                type=\"radio\"\n                value=\"option2\"\n                checked={corniceBase === 2000}\n                onChange={() => setCorniceBase(2000)}\n              />\n              Декоративный (2000 руб/м)\n            </RadioLabel>\n          </>\n        ) : null}\n      </Step>\n\n      {base && width && waves ? (\n        <Step>\n          <StepTitle>Итоговая стоимость: {totalPrice} руб.</StepTitle>\n          <small>\n            Итоговая стоимость складывается из следующих составляющих\n          </small>\n          <div>\n            <PriceLabel>Стоимость ткани:</PriceLabel>\n            <Price>\n              {base} x {width} x {waves} = {materialPrice} рублей\n            </Price>\n          </div>\n          <div>\n            <PriceLabel>Цена пошива:</PriceLabel>\n            <Price>\n              720 x {width} x {waves} = {sewingPrice} рублей\n            </Price>\n          </div>\n          <div>\n            <PriceLabel>Цена шторной ленты:</PriceLabel>\n            <Price>\n              {width} x ({waves}/0.3) x 100 = {tapePrice} рублей\n            </Price>\n          </div>\n          {cornice ? (\n            <div>\n              <PriceLabel>Цена карниза:</PriceLabel>\n              <Price>\n                {width} x {corniceBase} = {cornicePrice} рублей\n              </Price>\n            </div>\n          ) : null}\n        </Step>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Tulle;\n","import React, { useState } from 'react';\nimport Input from './Input';\nimport Fabric from './Fabric';\nimport {\n  Title,\n  Step,\n  StepTitle,\n  FormGroup,\n  Label,\n  RadioLabel,\n  Price,\n  PriceLabel,\n} from './Shared';\n\nconst Cornice = () => {\n  const [values, setValues] = useState({\n    base: null,\n    width: null,\n    height: null,\n    cornice: false,\n    corniceBase: 700,\n  });\n\n  const setWidth = (width) => {\n    setValues({ ...values, width });\n  };\n\n  const setCorniceBase = (corniceBase) => {\n    setValues({ ...values, corniceBase });\n  };\n\n  const { width, corniceBase } = values;\n  const cornicePrice = +(width * corniceBase).toFixed(2)\n\n  return (\n    <div>\n      <Title>Расчёт стоимости Корниза</Title>\n\n      <Step>\n        <StepTitle>1. Укажите размеры</StepTitle>\n        <FormGroup>\n          <Label>Длина карниза (ширина шторы)</Label>\n          <Input changed={setWidth} />\n        </FormGroup>\n      </Step>\n\n      <Step>\n        <StepTitle>3. Выберите тип карниза</StepTitle>\n        <Label>\n          <input\n            type=\"radio\"\n            value=\"option1\"\n            checked={corniceBase === 700}\n            onChange={() => setCorniceBase(700)}\n          />\n          Профильный (700 руб/м)\n        </Label>\n        <Label>\n          <input\n            type=\"radio\"\n            value=\"option2\"\n            checked={corniceBase === 2000}\n            onChange={() => setCorniceBase(2000)}\n          />\n          Декоративный (2000 руб/м)\n        </Label>\n      </Step>\n\n      {width ? (\n        <Step>\n          <StepTitle>\n            Итоговая стоимость: {width} x {corniceBase} =\n            <b style={{ paddingLeft: '5px' }}>{cornicePrice}</b> руб.\n          </StepTitle>\n        </Step>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Cornice;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Rome from './components/Rome';\nimport Portiere from './components/Portiere';\nimport Tulle from './components/Tulle';\nimport Cornice from './components/Cornice';\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background: #ffffff;\n  min-height: 600px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);\n`;\n\nconst Row = styled.div`\n  display: flex;\n  direction: row;\n  margin-bottom: 100px;\n`;\n\nconst Col = styled.div`\n  flex: 1;\n  text-align: center;\n  cursor: pointer;\n  &.active {\n    color: red;\n  }\n`;\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(1);\n\n  return (\n    <Container>\n      <Row>\n        <Col onClick={() => setActiveTab(1)} className={activeTab === 1 ? 'active' : ''}>\n          Римская штора\n        </Col> \n        <Col onClick={() => setActiveTab(2)} className={activeTab === 2 ? 'active' : ''}>\n          Портьера\n        </Col>\n        <Col onClick={() => setActiveTab(3)} className={activeTab === 3 ? 'active' : ''}>\n          Тюль\n        </Col>\n        <Col onClick={() => setActiveTab(4)} className={activeTab === 4 ? 'active' : ''}>\n          Карниз\n        </Col>\n      </Row>\n      {activeTab === 1 ? <Rome /> : null}\n      {activeTab === 2 ? <Portiere /> : null}\n      {activeTab === 3 ? <Tulle /> : null}\n      {activeTab === 4 ? <Cornice /> : null}\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}